<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAggAAADRCAYAAACpUkqtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABsKSURBVHhe7Z2/ziw1msa5hMMdoHMFSNzABJCTkBMTnYxgkiFDmyChkUZEBJuREG0wQrtkG6El
        Q6vVstwBXMLZ5+mxe9z+3m67q13drq7fT3r01R9Xtev9yuWnbFfVOwAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw3Lz5t/97T/pWertAP0sfp10BAADAM6DK
        3ebgj1TZ36I3aZcAAACwdVSx/1hV9LfoT2m3AAAAsFVUobv1IKrol+qrtGsAAID1UIXzJ+kv0veS+7qj
        SqmU74ad1ttwN9vAMZLOxbGl36QX26VdAwBsk19++eUj6cekL9LiA5p/JX2f1vnv+2nVAc1/kdZZn6bF
        B5xWytt+K71Kqw5ovtz2o7T4gOa9bV7ndMdtPS15f3n9SZ6eBVUwr6RPJVfydeWzRO5b975O/k/wDxSX
        0CCk1RdROpuwelsMAsDeUQX1qfQ26du0eBMovzYHOe9ZxwpE066Ay3W/pVX1cWcdK3pN/1atO14wNe1K
        v1xnvZfWvSf9USy3jnH1dLXOaU/Mx5ZRxfK+tHQUfa9sFr6SDjEHDAIADEYVU1RJbsYkKK9RRe2K3cuj
        dVZe93OxLCvf8deVeFbetjYP1qVtyzzV5sE6aYHYIqpQbAzcXF1XNGvLZmT3RkExwCAAwBhUKUXmIGsT
        JkH5dIUb5X9r2qxBUEXirgTfzdcVzD3lFoW/pCztEh0/BgEAbkcV0iVzkOX+96mbvpU/DMIDUSXiSmnE
        c/ej5MGPmx7Tofy/kepBhD06N/AzSlsrGqTo/2uUtiW36DxNlxnArlBldK75PJKb4act7MobBuFBqBJ4
        dKvBJW12IGNwLFvUrltzADaJKqI3VcXUo2lNgvKFQbgzuvi7S8F3ilHFMJM2NeA2ExzHFoVBANgaqoj8
        iF00OK+lKU2C8oRBuCO68Nsc9LzD4Jy8rVsePpbOdgVonbsu/Iik00bN373anEkIjmGLwiAAbBFVRk9j
        EpQfDMKd0EV/qTlwBe9BcIufNNC2fkLCZmHJeIdNmQTld6YxHUvFtxwAtoAK64s7NVVIS03CVCOblR8M
        wh3QObTEHNgYDB0LoP05HzYb11aimzEJyqtfmewWlM0qHQoAzIwKa35hzYsLtSqlRSYhbT4Fyg8G4Q4U
        51GvVm1i1v5tFK4dJEmzNwCA0QWxvqiPMAk/p02nQPnBIKyMzhs/dleeR5fkVoa7PWao3/Id6zWtCR+n
        TadHeXW3iltLtqLNxBZg16iwnrvjO2cS6lcSR5pxDILf5+C8b11TPruv88WVVHQeRfJ3Eu5+fvg3pd7u
        D5uJKZ/IqVE+R33D4m5KWQeAWVFBbTUHh/3CqqQuvR9hOnMA66NzpbfifWgfv37/GpPwfdpsapTPLTxK
        eqKUdQCYDRVQXyR7+4qvMQmYgx2ic6S3a2GKAYDKxzUmYfqBdMojBgEAbkeF85qLY1aPSZjaHOgY3PcZ
        HdvWNFWFpfz4fOrp259qTIry43z3vDfh+FXPWVEeMQgAcBsqmEvMQdYlkzB9y4Hyj0FYAeWnJ65T9ucr
        T73jJsJzfxaUPwwCACxHhfIWc5D1Vdrd5lDeMQiDUV56Ww+mHbWuvPWcF1O1ftQofxgEAFiGCuQIc5C1
        uVfSGuUbgzAY5cWvOI7yWGr6gX7KY09Xw7RjEZS3pkH4l3//36Oi9bX+/Pd/bhOtr1Wm93SUplTKOgA8
        EhXGkeYga3MmQXnGIAxGeek5rxa/NvleKI9+R0KU91LTnvPK20WD8B//9d/lQOK3//qf/xOmy/L6Mr23
        j9Jl2RCU6a2WsUhZB4BHoYK4hjmwMAiP0xQGQfnwa36j/JXazHmivLbKyR8p6XQobxcNQl15tyr82lBY
        Ubosm4E6fcuEpKwDwCNQIcQcFCjfGISBKB89jzZO+VKnCOW1p7tkyrEUyhcGAQD6UAHEHFQo770GIX9R
        8FFqvZ9iFoPQenvf1AP7IpTn1oDLKQfpKl8YBABoo8KHOQhQ/l35RsdV66FfodTvt/rDZzEIrcp0cx88
        Up5b5myqL5RmnK8qnyeqK28MAsAOUcHzc92YgwAdQ69BcPyOn6N9gFpN9w83CMpDz/iDzXQvZJTnZjdD
        SjoVyhcGAQDOo0Jnc9DzTPq12rw5MDqOXoMwu2YwCDYyUd6OSkk3hfLdY3ymeypDecIgAECMChzmoIGO
        BYMwCOWhFcspm+J7CI6l1hRdPCXKEwYBAF6iwoY56EDH06rU3P/sNGup9+NYLW3BIGziK4gRyvvFylaa
        7rXLyhMGAQBOUUHDHHSiY2pVaqtWvN5/9XtLtQWDsLkBihnlvWUQpjs25QmDAAD/RIVsLXPwJv3EU6Hj
        alVqHhxYDhYcrd5PIreEQVgR5R2DgEEA2C4qYGuZg6m/WncLOrZWpbYVYRBWRHlvdQVhECphEAAmQYUL
        c7AAHR8GYRDKAy0IE6E8YRAA9o4KFuZgITrGXoPAmxQbKA/OZ5S3rM2OYVHeWwZhutctK08YBIA9o0KF
        ObgBHWerUsviTYoNlIdWLHnM8Y4oTxgEgL2iAuU3vGEObkDH2msQeJNiA+Wh9cbBab98eAnlu+dFSa9S
        8mlQnjAIAHtEhannK3NLtBtzYHS8vQZhds1gEGxkoryVmu6Ngy2cZ8nnyVmlpFOhfGEQAPaGChLmYBA6
        Zl/go1hsTVM0cQf5qrW7c+xRKNYYBIA9oUKEORiIjrtlENZ+D0Kvpu9iMMpH66Ngm32b4tZQrDEIAHtB
        BQhzMBgde8sgzFLx2iRE+cuaJZ9fVfmKNF1//TOiOGMQAPaACs8a5sADHDf3+d2R6PhbBmHtbzH0avrH
        HI3y8XGVr0ibfR/CllCcMQgAz44KDuZgJRQDV75RfLamKQyCUV5aT9Z4Pa0IK6MYYxAAnhkVGszBiigO
        GITBKC89X6ikFWFlFGMMAsAzo0LTGvR1rTAHBYpFyyAwSPFKnJcqb5F8Hm7ukcctofhiEACeGRWaV9Io
        k4A5qFA8WgZhlr79VqU7jUEwyo9fTR3ls9Rd36yo3/P/2pXmCH0vTd1NkvIZxf2guvLGIABsEBWcESYB
        cxCgmLQMAoMUF6D89HaN3a2rQb/VaoW5VlOXJ+UPgwDwTKgQfSSFjx2qAPX07UbCHJxBcXHlG8Vsa5rK
        IBjlqacVwbrbY7b6rYuV5hX6Le1yWpRHDALAM6FC9GMqTKNMAubgAooNBmElnKcqj5d0F5Og33FrnMtE
        lIdrNP0gS+URgwDwLKgAvVcVqFtNAuaggeLTMggMUrwB5ct99VF+I93LJPS8q6Gl6QdYKo8YBIBnQQXo
        i7pASUtNgpt3MQcNFKOWQZii4nU+qnzVmtUgXHvH/lXadFX8O9XvXqOf026mRvnEIAA8CypAv9UFKula
        k+ABjbyIpgPFqWUQHGOnebRahnBKg2CctyqvLfn8XdXcav82Lr1jJGq9SbuZGuUTgwDwDKjweHDiiwJV
        6IuU9AQVqrriwBxcgWLlyreM31Y1rUEwyt+SJwj8vxl+Lmuf/nzzxcqzoU28v0H5xCAAPAMqPN/XhSnQ
        tyn5CSpY2SRgDq5E8cIg3AnlsdUKEsndE+4OuLlS1j7el5bkodQmuheM8opBANg6Kjj14MRLOmcSfIeG
        ObgSxaxlEK4dpHjr+yqWanqDYJTPWypox/bw/0i7a6K0NgXeZtT/ZRPdC0Z5xSAAbB0VnGhw4iWFJgGu
        RxellkG4quJV+luarm/RJgyCUV5vvYvPcqXveLuFwf9Hy/v2srWM2mZeD628XjwX6wq/VXl7fZm+ZSj+
        /PeXJsSmIUqblbIOABkVnHODEy8JkzAAXZRaBiFXQr0a8Yz9Em3GIBjld42PkK2t71P2N4Hy6/MxOo6j
        XGFnRetrleltAKI0pZzmmvQp6wBgVNG3Bide0l2eG39mdFFqGYStaFMGwSjPbv5f+iTBI7Sp8qb8Ng3C
        bEpZBwCjSv7bqtJvya0N7pLgS3gD0EUJg/BAlG8/bnjLOwlGyq1Fl7omNjXGR/nFIABsFVXyr1Kl39If
        ko3ER2lTGIQuShiECXD+pUdVaG7FOLQO6K8fgYy6iTbVvWCUZwwCwFZRhf8mGYBz8ncZPpV4OmEldFHC
        IEyEj0O6V8V2NAYlWha9inlz3XnKMwYBYKuo4o8GJ9KFcEd0UcIgTIiOx3fy7noYPUbBrQN+0uFivLS+
        7vbYnElXnjEIAFtEBuD9ZAgsuhAehC5KGITJ0bHldxn4w0/XPiXi9K4o/X/ujpHSemxEHo+wySeGlO9r
        PpQ1hVLWAfaNzYDktyfShfBAdFFyk/ajHk0cJd9l76bFScfqyju/mMoVfy13EXjdTTHR9jYmPjc2ab5S
        /qP4zKqnNbkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAwnK//+rd3pQ+ttAgAAAD2jEzBl9LbQj+l5T9Uyz3/QVpXLj+s8/KM5n9Py3P6z9N8LZuS+nfe
        HnayI4IYlLG+GB/Nf5eWf54WHchpk/z/+EZ6N61+WnSMh3ilWc/7HDvGJ02XccnL6zg7rof/QUbz+Tz+
        Li2q95flfeXfLXXyP3oGdEwX46bp8PzNyw+JEpoPYya92IeVtqmXn1yLAGAhKkzHC550aEGQPknrcqH0
        spMLY5r+ScrblBeET6S8/su07LXkdK6kvM7787xbLsrfOeiwox1RxaCO9dn4aNrx8zrH+mDsMsVyb5NN
        oOef2iTo+A7xSrOe9/H72EuDkOOSY/tBMe3l/h/YPFjluX2Is+R0hzjq7+F/kpbl/Xp/eZnP+Zzm9WFH
        T4SO6WLc9Dc8f/NyT2fS+hcxk3I8c+zL/Xg+x906MXUAsBAVJhfkX9PsCVp+UoA97WX1dI2Wu3C7wLpS
        Otm35nPlV1ZyLy4Ue6OOgae9LE2fjY+Wf5bS5r/HCijNH/9Hms6xf7q72BIfs48zzXrelcbxuNN0ju1x
        nZd52stNsS4bNVdUnj/G/JAwkZaV8T753WfFx+zjTLNR3MLzN1qu+YsxO7PNSdwBYAAqVHblLlyHu/wa
        F7q03nepJ5VLmi5de1kx2XQ4fS7s5R3YWYPgZUm7uwMoYhDF+mx8NO2Wn7JV53hhTfNlhZUruEP6Z8XH
        7ONMs57P52F57maDUBqsk+2M5n+Vfk/T/r/kaac9iaPm63jn3y3vhp+u9UbH1IpbeP7m5Z7OpPVnY6bp
        aBunD69FALCQVJhcuC669ULfpFW5UJbKF9/cvZAvAjYLRwOi6UsGIWt3dwNBDMpYh/HR39y9kGNvs3Ds
        ZkjrTmIZLXs2fHw+zjTr+ZPzPE37vMxxdeVy7Oo6bJQol+mv02Uzls/jsvI6ia2m8++WOp73z4KOqRW3
        HOesfP5G212Mmaajber04fUMAK5ABam3BcF3np72RTX3u3r5i4pGy+z8D4U0yXcSx26GtMzr6WIoyDGQ
        oliH8dGyfPfrmDuux32k9Z4uK6zcgnA0H8+Ij9nHmWY9HxkEn5f5HD0bZ80fzl8px85pvE0+z4/dDGk+
        MghPXWH5mH2cafaA5o/lPlpvouWavxizM9ucxB0ABqGC5YqoOQZBf3PLwOGCmKYjg3DYn9cl+a7LaXOL
        AgYhoIyB/taxDuOjZW4xyHfCWd6urAjLCivH/qTv/NnwMfs406znc6XTOnfPbZcN2GG7Qo79sZtB0yf7
        1fQuDUJx3AcjWq/PRMs1j0EAmAUXxFTAyqcYDpW3/tYF/5CumC77/axcsR2egjCaznde+WmGswbBywod
        m273gI73UqzD+KRlJ60/mrc5y4+pen3+Hx2fYjgkfGJ0jPkc81/Hyee258OWlYyXpXWOl7e1AbB8DjuO
        9VMiuRUhbFXTtPfjZU6X/29PN75Gx3Q2bsH6rGOXTrEs62zMNH3YJs0e8Lx0ci1KqwDgVlSg8gU1K1cw
        J4VR0/lCmyunWocLZkp+RMvKSiv/VmQQSu2qkOt4L8U6ik/uXjiJk+aPlVb6m+X/waHCTEmfFh+jVMfs
        bFdAxsvSOssVnGNpc5BN7sldrebz/yA/FnyyX03nyq7U093p+piK4zvGLa2u12c5NueW18vKmB62SbMH
        inRHpVUAMAIVKl9UswPf1d07PCc6j/Oz85zPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAz8nX//i4kt8njxBCT6N0iQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAALgDX//1b6+lD6XPA/kra173bkoOAAAAz0qq9L+RfpXedsppv5Q+SbvZ
        PUVsrpHj+EOS42kT9jrtEioUmyiGWT+kZN1oG5/70b6yPk9Jd0UQhx79Lvk8/k7yDYU/Rc/NBMAWUeF1
        ZXSNKTin39Mud00Ql1vkC+2HadeQqGJUC4MwiCAOt8iG4bO0awCYGRVWdyO4AooK8yKlXe+aKC4D5Isr
        d2GJKja1MAiDCOIwQr4ZwSgAzIoKqJv93BQYFeDFSrvfNVFcBuknCZMgqrjUwiAMIojDSPnmhPMZYCZU
        KN2lEBXYW/Vr+oldE8RlpL5LP7NrgriUwiAMIojDaPkm5YP0cwDwSFQY3XIQFdQe2fFfGqtw9YX5GQni
        Mlq7HxAaxKQUBmEQQRzWECYB4NGoEHrMQW+3gtP5iYawMtLyd70upcnbYBBEEY9IL2KkZY6lKyg/vdDz
        //kpbbpbgpiUwiAMIohDqTDOWv6B5KcX3CUWbRfJNx50NwA8ChXA3gGJrqi6C6vS2njYKGAQhOIQxTTr
        Yoy03mah58K660cgg3iUwiAMIohDqWaclcZx7TUKdJ8BPAIVvt6uhcWji7UtdwCiimetnouqTUKrJWHX
        3QxBPEphEAYRxKFUd5yVtmxpvCQe6QW4Nyp4Pe854NGjAQRxLdV1UVW61gV1lxVWJohHKQzCIII4lLoq
        zkrfYxKu/t8BwA2o0PW0HnyZksONBLEt1WsQ3IcbbZ+FQTgvDMIggjiUWhLnnu4GBiwC3AsVOL9kJyqI
        WW7OpntgEFVsa/UahJapwyCcFwZhEEEcSq0RZ+ublBwA1kSFzf3ZUSEstevKZjRBfEv1GoTWuyowCOeF
        QRhEEIdSV8fZeLtqP7V4nwrAPVBh6+leoPVgIEF8S/UahFYXw67HiwTxKIVBGEQQh1JLDULPi9roZgBY
        GxU0P7IYFcAsHi0aTBDjUr0GodUtxGOO54VBGEQQh1JLDUJPqyYDpgHWRgWt1ZxH98JgghiXal5UlcYv
        mom2zVp0YX4mgpiUwiAMIohDqcXnobet9lWL6xLA2qigtZ6n57njwQQxLnXxoqr1PS9K2v3/LIhJKQzC
        III4lLrFILRaNhfvGwA6CQperV03Va9BEONS4YVPy20M3DfbMnSM8BZBXEphEAYRxKHULQahNcYGgwCw
        JipkraZqPs+8AlGcC9kAuHm1VpS2FuYgEcSmFAZhEEEcSt1iEFrx/j0lBYA1UCFrFUIMwgpEcb5RNhX0
        yRZU8amFQRhEEIdSaxoErk0Aa6JCRiF8AFGcF8pjEdwUy2OoFUWMImEQBhHEoRQGAWCrqJBRCB9AFOcF
        8rczPJCLMSIBRZwiYRAGEcShFAYBYKuokFEIH0AU5xvk7gVeGlNRxagWBmEQQRxKYRAAtooKGYMUH0AU
        5xvl1gS6GQqq+NTCIAwiiEOpNQ0Cr1sGWJug4NWiCXswQYxLHS+qmvajjX4Vds9ncHdZQZ0jiE8pDMIg
        gjiUusUg8JgjwKMJCl4tXpQ0mCDGpcILn5a33k/PHVVBEJ9SGIRBBHEodYtB4BXwAI9GBa31jD13poMJ
        Ylzq7EVV61oXTcYiJILYlMIgDCKIQ6lbDALXJYBHo4LGK03vTBDjUpcMwusqba0vU9LdE8SmFAZhEEEc
        Si26dmi7no810bIJsDYqaHzu+c4E8S118aKq9Ze+4sjb5RJBbEphEAYRxKHUUoPQ87lnrkkAa+OCVhW8
        SDTnDSSIb6mWQWgN3vokJd01isOlb1YsMQgtI73LO9ogDqWWGoRW9wLjDwDuhQtcVQBr+WKLYx9EFdta
        LYPQ6mbgewxCcbhUyVzd0qJtWsYMg/BSS4xYq6XG+iwlB4C1UYHr6Wagf3sQQWxLNS+qSnPpc890MwjF
        ofVo6FWGV+mH7u9ZCOJQaolBaH3KnPMb4N6o4PllO1GBLIVzH0AQ11I9BoFuhgaKQStGV53LSn+pfOz2
        EdMgFqWuMghKz/s+AGZEBa+nFcHCJNxIENNSPQah9QbM3XczKAatrpjuyktpW4Pmdtu6FsSi1DUx7jEH
        vOsD4FGoALYGB2X50chrm2jdt0j/uEgxPKeui6rSXbqjpRlWKA6t87lpdpXGg3hbrWu7ff9EEItSPWbX
        14VWt0IWjzYCPAoVQN91XRr9Xcrp7Prd8hCaBS134XdTb77Adt9RPDMpFufUaxBad1x0M7Tv/K2zZlfL
        fW63zMGuz+kgHqXC2Gi5W8B8Xeg1BhZdCwCPRgWxZxTxOfmO7dIFFYMggriU6jUIrS4hWmuE4tDbKuZ0
        fprHhqF1Hpfa9V1tEI81xLkMMAsqkD13Xkv0U/qJXRPEpVS3iQq2LcWjqUIx8N1qb6vYtdr9kz1BTEaL
        p6cAZkMF0y0Jwy+safe7JopLoWsMQuv9FQwoFYpD7wDca8RdrQjiMkq+9vDSL4BZUQH1mITeJtoupV3v
        miguha4xCK2WHt44l1AsbBJGGV7MQSKIzQh5fM3uW78ANoEKq1sThhiFtMtdE8Wl0DUGoec12VxoE4rF
        rYbX4xK4qy2o4nOLHFsPXHyddg0AW0KF1/25HsTVO4Ary+l9V8BjSqKIS6Rug2CUvjUSnG6GCsXE57HP
        x97z2F05xDGgilOvHHcbNf8PbAr4TDnAM6FC7btXtyy4mduFvJbXYQhganSOulXB52p9/vq85vwFAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAgC3wzjv/D067XoeM+vbwAAAAAElFTkSuQmCC
</value>
  </data>
</root>